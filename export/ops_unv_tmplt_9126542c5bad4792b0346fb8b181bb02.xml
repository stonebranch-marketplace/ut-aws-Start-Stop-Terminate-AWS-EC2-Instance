<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2020-07-08 15:16:28" unload_format="1" unload_table="ops_unv_tmplt" unload_version="6.8.0.0"><ops_unv_tmplt action="INSERT_OR_UPDATE"><credentials_var/><agent>aa288d4fa10945dd895038893cf96b2d</agent><icon_date_created>2020-04-24 07:38:48</icon_date_created><sys_updated_on>2020-05-27 10:57:55</sys_updated_on><output_return_text/><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 12:11:01</sys_created_on><agent_cluster_var/><agent_cluster_var_check>false</agent_cluster_var_check><wait_for_output>false</wait_for_output><sys_created_by>Ravi</sys_created_by><output_return_nline>100</output_return_nline><exit_code_text/><exit_code_fr>0</exit_code_fr><runtime_dir/><output_return_type>1</output_return_type><script/><broadcast_cluster_var_check>false</broadcast_cluster_var_check><agent_type>1</agent_type><script_type_windows>py</script_type_windows><automatic_output_fr>0</automatic_output_fr><agent_cluster/><name>AWS-EC2-Create-Instance</name><exit_codes>0</exit_codes><broadcast_cluster/><use_common_script>false</use_common_script><credentials/><icon_filesize>9802</icon_filesize><icon></icon><credential_fr>0</credential_fr><description>Universal Template to create EC2 Instance</description><environment_variables_fr>0</environment_variables_fr><agent_var/><icon_filename>aws icon.png</icon_filename><sys_id>9126542c5bad4792b0346fb8b181bb02</sys_id><variable_prefix>ec2</variable_prefix><system_template>false</system_template><script_windows/><credentials_var_check>false</credentials_var_check><agent_fr>0</agent_fr><agent_var_check>false</agent_var_check><output_failure_only>false</output_failure_only><output_return_sline>1</output_return_sline><output_type>1</output_type><desktop_interact>false</desktop_interact><script_unix>#!/usr/bin/python3
#/opt/universal/python3.6/bin/python3
###########################################################
#    Name: EC2_Create_Instance.py
#
#    Purpose: Create EC2 Instance by getting required parameters for AMI
#
#
#    Prerequisites:
#     - Universal Agent for Windows/Linux
#     - Python 2.7.x
#     - Requires the Python modules
#     - datetime, boto3 , botocore, argparse, sys
#     - Note: module can be added using pip
#     - e.g. use: pip install boto3
#
#     Version History:
#     0.1  Ravi Murugesan 2020-04-19 Initial Version
#     0.2  Ravi Murugesan 2020-04-29 wait until Instance status check 
#     0.3  Ravi Murugesan 2020-05-17 Incorporated logic for Universal Agent installation
####################################################
version = "0.3"

# Used modules

import re
import glob
import sys, os
import datetime, time
import logging
import boto3, botocore
import argparse
import paramiko

# -- loglevel settings INFO,DEBUG, WARNING, ERROR, CRITICAL

logging.basicConfig(level=logging.INFO, format=' %(asctime)s - %(levelname)s - %(message)s')

def main():
    Set_Variables()  # -- Set Variables from Universal Task Form or Command Line Input
    if args.launch_instance_option == "new_instance":
        create_ec2_instance()
    elif args.launch_instance_option == "launch_from_template":
        launch_from_template()
# --
def Set_Variables():
    parser = argparse.ArgumentParser(description='Purpose : Create EC2 Instance')
    # ## --&gt; AWS Connection Settings:
    parser.add_argument("--AWS_ACCESS_KEY_ID", default="${_credentialPwd('${ops_ec2_aws_access_key_id}')}")
    parser.add_argument("--AWS_SECRET_ACCESS_KEY", default="${_credentialPwd('${ops_ec2_aws_secret_access_key}')}")
    parser.add_argument("--AWS_DEFAULT_REGION", default="${_credentialPwd('${ops_ec2_aws_default_region}')}")

    # ## --&gt;EC2 API specific Settings
    parser.add_argument("--launch_instance_option", default="${ops_ec2_launch_instance_option}")
    parser.add_argument("--launch_template_name", default="${ops_ec2_launch_template_name}")
    parser.add_argument("--associate_public_ip", default="${ops_ec2_associate_public_ip}")
    parser.add_argument("--subnet_id", default="${ops_ec2_subnet_id}")
    parser.add_argument("--aws_image_id", default="${ops_ec2_aws_image_id}")
    parser.add_argument("--key_pair_choice", default="${ops_ec2_key_pair_choice}")
    parser.add_argument("--key_pair_name", default="${ops_ec2_ec2_key_pair_name}")
    parser.add_argument("--instance_type", default="${ops_ec2_ec2_instance_type}")
    parser.add_argument("--min_count", default="${ops_ec2_min_count}")
    parser.add_argument("--max_count", default="${ops_ec2_max_count}")
    parser.add_argument("--aws_availability_zone", default="${ops_ec2_aws_availability_zone}")
    parser.add_argument("--aws_security_group_id", default="${ops_ec2_aws_security_group_id}")
    parser.add_argument("--device_name", default="${ops_ec2_device_name}")
    parser.add_argument("--instance_tag", default="${ops_ec2_instance_tag}")
    parser.add_argument("--ebs_volume_size", default="${ops_ec2_ebs_volume_size}")
    parser.add_argument("--ebs_volume_type", default="${ops_ec2_ebs_volume_type}")
    parser.add_argument("--iam_instance_profile_name", default="${ops_ec2_iam_instance_profile_name}")
    parser.add_argument("--ebs_volume_encryption", default="${ops_ec2_ebs_volume_encryption}")
    parser.add_argument("--monitoring_enabled", default="${ops_ec2_monitoring_enabled}")
    parser.add_argument("--install_univ_agent", default="${ops_ec2_install_univ_agent}")
    parser.add_argument("--url_univ_agent", default="${ops_ec2_url_univ_agent}")
    parser.add_argument("--agent_install_os", default="${ops_ec2_ec2_agent_install_os}")
    parser.add_argument("--agent_oms_server", default="${ops_ec2_agent_oms_server}")
    parser.add_argument("--connect_linux", default="${ops_ec2_connect_linux}")
    parser.add_argument("--os_user_id", default="${ops_ec2_os_user_id}")
    # ## --
    global args
    args = parser.parse_args()
    # -- Setup Logging
    logging.info("Executing version " + version + " with the following paramaters")
    logging.info(args)
# --
# --
# ## EC2 Client Connection 
def make_client_connection():
    from botocore.config import Config
    logging.debug('Establishing connection')
    # Create a S3 client, provide the AWS credentials, provide proxy details
    logging.info('Ec2 Connection')
    ec2client = boto3.client(
            'ec2',
            aws_access_key_id=args.AWS_ACCESS_KEY_ID,
            aws_secret_access_key=args.AWS_SECRET_ACCESS_KEY,
            region_name=args.AWS_DEFAULT_REGION
        )
    return ec2client
### Make Resource connection 
def make_ressource_connection():
    from botocore.config import Config
    logging.info('EC2 Resource connection')
    ec2connect = boto3.resource(
            'ec2',
            aws_access_key_id=args.AWS_ACCESS_KEY_ID,
            aws_secret_access_key=args.AWS_SECRET_ACCESS_KEY,
            region_name=args.AWS_DEFAULT_REGION
    )
    return ec2connect

### Create New key pair if requested in the request
def create_new_keypair(ec2client):
    if not args.key_pair_name :
        logging.info("Keypair Empty -No New Keypair will be generated")
        return args.key_pair_name
    elif args.key_pair_choice == "new_keypair":
        keypair_name = os.path.basename(args.key_pair_name)
        keypair_path = os.path.dirname(args.key_pair_name)
        logging.info("Keypair path :"+keypair_path+" Keyname: "+keypair_name )
        # create a file to store the key locally
        try:
            outfile = open(args.key_pair_name+".pem",'w')
            key_pair = ec2client.create_key_pair(KeyName=keypair_name)
            #print (key_pair['KeyMaterial'])
            keymaterial=str(key_pair['KeyMaterial'])
            outfile.write(keymaterial)
            logging.info("New Keypair Generated successfully: "+keypair_path+keypair_name+".pem")
            return keypair_name
        except Exception as e:
            logging.error("Error in Generating new Keypair")
            logging.error(e)
            sys.exit(1)
    elif args.key_pair_choice == "existing_keypair":
        keypair_name = os.path.basename(args.key_pair_name)
        keypair_path = os.path.dirname(args.key_pair_name)
        return keypair_name
##################################################################################################
#Create Ec2 instance based on the parameters that is passed through 
#    1) Create new key pair if the path and name is specified
#    2) Dynamically form the input parameters for the EC2 instance creation
#    3) Request Ec2 instance creation through Boto3
##################################################################################################
def create_ec2_instance():
    # Establish connection to AWS
    ########################################################
    ec2client = make_client_connection()
    # Check if there is a need to create new Keypair
    #########################################################
    print(args.key_pair_name)
    keyname=create_new_keypair(ec2client)
    ######Go ahead and evaluate Instance creation Parameters###
    # Mandatory parameters in universal task will be evaluate in the boto3 call to aws
    #
    ec2connect=make_ressource_connection()
    ec2_input_parm = { 
        "ImageId":args.aws_image_id,
        "MinCount":int(args.min_count),
        "MaxCount":int(args.max_count),
        "InstanceType":args.instance_type
    }
    if not args.ebs_volume_encryption:
        ebs_encryption=False
    else:
        ebs_encryption=True
    if not keyname:
        logging.info("No Key pair for instance creation")
    else:
        ec2_input_parm.update({"KeyName":keyname})
    if not args.aws_availability_zone:
        logging.info("No availability zone")
    else:
        ec2_input_parm.update({
            "Placement":{
                "AvailabilityZone":args.aws_availability_zone
            }
        })
    if not args.instance_tag:
        logging.info("No Instance Tags provided - Instance name will be Null")
    else:
        ec2_input_parm.update({
            "TagSpecifications":[
                {
                    "ResourceType":"instance",
                    "Tags":[
                        {
                            "Key":"Name",
                            "Value":args.instance_tag
                        }
                    ]
                }
            ]
        })
    if not args.device_name:
        if not args.ebs_volume_size and not args.ebs_volume_type:
            logging.info ("No changes to the ebs volumes-Default values considered")
        else:
            logging.error ("EBS volume size and volume type cannot be empty")
    elif (args.device_name !="" and args.ebs_volume_size !="" and args.ebs_volume_type !="") :
        ec2_input_parm.update({ 
            "BlockDeviceMappings":[
                {
                    "DeviceName": args.device_name,
                    "Ebs":{
                        'VolumeSize': int(args.ebs_volume_size),
                        'VolumeType': args.ebs_volume_type,
                        'Encrypted' : ebs_encryption    
                    }
                }
            ]
        })
    if args.monitoring_enabled == "false":
        logging.info("Monitoring will not be enabled")
        ec2_input_parm.update({ 
            "Monitoring":{
                "Enabled":False
            }
        })    
    else:
        ec2_input_parm.update({ 
            "Monitoring":{
                "Enabled":True
            }
        })
    if args.associate_public_ip == "false":
        ec2_monitor=False
    else:
        ec2_monitor=True
    if not args.subnet_id:
        logging.info("No subnetId is provided")
        group_set_flag=False
    elif (args.subnet_id !="" and args.aws_security_group_id !=""):
        format_security_group_id=args.aws_security_group_id.split(',')
        ec2_input_parm.update({
            "NetworkInterfaces":[
                {
                    "AssociatePublicIpAddress":ec2_monitor,
                    "DeviceIndex":0,
                    "Groups":format_security_group_id,
                    "SubnetId":args.subnet_id
                }
            ]
        })
        group_set_flag=True
    if not args.aws_security_group_id:
        logging.info("No security Group Id provided - Default to be used")
    elif not group_set_flag:
        format_security_group_id=args.aws_security_group_id.split(',')
        ec2_input_parm.update({
            "SecurityGroupIds":
                format_security_group_id 
            
        })
    try:
        logging.info("--------------------------------")
        logging.info("Initiating EC2 Instance Creation")
        logging.info("--------------------------------")
        print ("Create_instance_req: ",ec2_input_parm)
        ec2_instance_create_response=ec2connect.create_instances(**ec2_input_parm)
        logging.info("Instance Created : "+str(ec2_instance_create_response))
        #print(ec2_instance_create_response[0].id)
        instance_count=1
        for ec2instance in ec2_instance_create_response:
            ec2instance.wait_until_running()
            ec2instance.reload()
            logging.info("EC2 Instance ID : "+ec2instance.id+" Instance Type:"+ec2instance.instance_type+" Public IP:"+ec2instance.public_ip_address)
            #print (ec2instance.id,ec2instance.instance_type,ec2instance.public_ip_address)
            if instance_count == 1:
                instance_ids=ec2instance.id
                #### Get the Public or private IP Accordingly
                if args.connect_linux == "false":
                    ip_address=ec2instance.private_ip_address
                else:
                    ip_address=ec2instance.public_ip_address
                instance_count=instance_count+1
            else:
                ##append instance id with comma for more than one instance creation
                instance_ids+=","+ec2instance.id
                ##append IP address with comma for more than one instance creation
                if args.connect_linux == "false":
                    ip_address=","+ec2instance.private_ip_address
                else:
                    ip_address=","+ec2instance.public_ip_address
                instance_count=instance_count+1
        #### Get the Instance ID and give the Current status 
        ##################Get the Instance ID's and pass it to check status function#########
        status_check=check_instance_status(instance_ids)
        ######################################################################################
        ######################################################################################
        # Check if Universal Agent needs to be installed after Instance status 
        #Note: Universal Agent Installation is applicable only to Linux box
        #######################################################################################
        if status_check:
            if args.install_univ_agent == "true":
                ##get the requirement parameters for installation
                univ_agent_status=install_linux_agent(ip_address)
            else:
                logging.info("No Requiremt to Install Universal Agent")
                logging.info("***************Ending EC2 Creation *************** ")
        else:
            logging.info("Issue with Instance status check")
            logging.info("***************Ending EC2 Creation Abnormally*************** ")
            sys.exit(1)
    except Exception as e:
        logging.error("Error in Creating EC2 Instance")
        logging.error(e)
        sys.exit(1)
#### Function to install the Universal agent once the Instance is up and runnning 
def install_linux_agent(ip_address):
    logging.info("---------------------------------------")
    logging.info("Initiating Universal agent Installation")
    logging.info("---------------------------------------")
    #Get the required parameters to initiate the connnect with ec2 
    get_ip_addresses=ip_address.split(',')
    instance_key=args.key_pair_name+".pem"
    for aws_host_ip in get_ip_addresses:
        try:
            sshcon   = paramiko.SSHClient()  # will create the object
            sshcon.set_missing_host_key_policy(paramiko.AutoAddPolicy()) # no known_hosts error
            logging.info("Initiate SSH Connect with Host:"+aws_host_ip+" Key File:"+instance_key)
            sshcon.connect(hostname=aws_host_ip, username=args.os_user_id, key_filename=instance_key)
            logging.info("Initiating Agent Install File Download")
            linux_command='wget '+args.url_univ_agent+" &gt;&gt;auto_install.log"
            stdin, stdout, stderr = sshcon.exec_command(linux_command)
            check_linux_exec=check_linux_exec_status(stdout.channel.recv_exit_status(),linux_command)
            print (stdout.readlines())
            if (check_linux_exec):
                logging.info("Universal agent installation file downloaded successfully")
                logging.info("Initiate Extract on Agent Install file")
                file_name=os.path.basename(args.url_univ_agent)
                logging.info("File Name: "+file_name)
                linux_command = "zcat "+file_name+"| tar xvf -"
                stdin, stdout, stderr = sshcon.exec_command(linux_command)
                check_linux_exec=check_linux_exec_status(stdout.channel.recv_exit_status(),linux_command)
                if (check_linux_exec):
                    logging.info("Extract Complete")
                    logging.info("Initiating Universal Agent Installation")
                    linux_command = "sudo sh ./unvinst --oms_servers "+args.agent_oms_server+" --oms_port 7878 --oms_autostart yes  --uag_autostart yes  --ac_netname Demo-Agent --python yes &gt;&gt;auto_install.log"
                    stdin, stdout, stderr = sshcon.exec_command(linux_command)
                    check_linux_exec=check_linux_exec_status(stdout.channel.recv_exit_status(),linux_command)
                    if (check_linux_exec):
                        logging.info("Agent Installation completed - Ensure security group allows 7887 for UDM connection")
                        linux_command = "cat auto_install.log"
                        stdin, stdout, stderr = sshcon.exec_command(linux_command)
                        check_linux_exec=check_linux_exec_status(stdout.channel.recv_exit_status(),linux_command)
                        if (check_linux_exec):
                            print("---------------------------------------------")
                            print("-----Agent Installation summary--------------")
                            print("---------------------------------------------")
                            print (stdout.readlines())
                    return True
            sshcon.close()
        except Exception as e:
            print(e)
            logging.error("Error in Universal Agent Installation: "+e)
            return False
            sys.exit(1)
            
######check Linux return during the Agent installation process
def check_linux_exec_status(lin_return_code,lin_command):
    if (lin_return_code != 0):
        logging.error("Error with command execution "+lin_command)
        logging.error("Return Code: " +lin_return_code)
        return False
    else:
        logging.info("Command:"+lin_command+" Executed Successfully")
        return True

#### Function to check the instance status until its gets in to running status
def check_instance_status(instance_ids):
    # Establish connection to AWS
    ########################################################
    ec2resource = make_client_connection()
    #Format the instanceid input for the boto3 function
    instances=instance_ids.split(',')
    print(instances)
    try:
        logging.info("------------------------------------")
        logging.info("Initiating EC2 Instance status check")
        logging.info("------------------------------------")
        time.sleep(10)
        response=ec2resource.describe_instance_status(
        InstanceIds=instances)
        logging.info(response)
        for instance in response['InstanceStatuses']:
            logging.info("Instance ID :"+instance['InstanceId']+" Instance State:"+instance['InstanceState']['Name']+" Instance Status:"+instance['InstanceStatus']['Status']+" System Status:"+instance['SystemStatus']['Status'])
        logging.info(" Check Instance status")
        waiter = ec2resource.get_waiter('instance_status_ok')
        logging.info(" Instance Status --&gt;ok")
        waiter.wait(InstanceIds=instances)
        logging.info(" Check System Status")
        waiter = ec2resource.get_waiter('system_status_ok')
        waiter.wait(InstanceIds=instances)
        logging.info(" System Status --&gt;ok")
        return True
    except Exception as e:
        logging.error("Error in checking ec2 instance status")
        logging.error(e)
        return False
        #sys.exit(1)
##
#launch instance from Template - function launch_from_template()
##
def launch_from_template():
    # Establish connection to AWS
    ########################################################
    ec2client = make_ressource_connection()
    # Check if there is a need to create new Keypair
    #########################################################
    print(args.key_pair_name)
    keyname=create_new_keypair(ec2client)
    ######Go ahead and evaluate Instance creation Parameters###
    # Mandatory parameters in universal task will be evaluate in the boto3 call to aws
    #
    ec2connect=make_ressource_connection()
    ec2_input_parm = {
        "MinCount":int(args.min_count),
        "MaxCount":int(args.max_count)
    }
    if not args.aws_image_id:
        logging.info("Launch from template - No Image ID specified")
    else:
        ec2_input_parm.update({"ImageId":args.aws_image_id})
    if not args.instance_type:
        logging.info("Launch from template - No Instance type specified")
    else:
        ec2_input_parm.update({"InstanceType":args.instance_type})
    if not keyname:
        logging.info("No Key pair for instance creation")
    else:
        ec2_input_parm.update({"KeyName":keyname})
    if not args.aws_availability_zone:
        logging.info("No availability zone")
    else:
        ec2_input_parm.update({
            "Placement":{
                "AvailabilityZone":args.aws_availability_zone
            }
        })
    if not args.aws_security_group_id:
        logging.info("No security Group Id provided - Default to be used")
    else:
        format_security_group_id=args.aws_security_group_id.split(',')
        ec2_input_parm.update({
            "SecurityGroupIds":format_security_group_id
        })
    if not args.instance_tag:
        logging.info("No Instance Tags provided - Instance name with empty")
    else:
        ec2_input_parm.update({
            "TagSpecifications":[
                {
                    "ResourceType":"instance",
                    "Tags":[
                        {
                            "Key":"Name",
                            "Value":args.instance_tag
                        }
                    ]
                }
            ]
        })
    if not args.subnet_id:
        logging.info("No subnetId is provided")
    elif (args.subnet_id !="" and args.aws_security_group_id !=""):
        ec2_input_parm.update({
            "NetworkInterfaces":[
                {
                    "AssociatePublicIpAddress":args.associate_public_ip,
                    "Groups":[
                        args.SecurityGroupIds,
                    ],
                    "SubnetId":args.subnet_id
                }
            ]
        })
    if not args.launch_template_name:
        logging.info("No Template Name Provided")
    else:
        ec2_input_parm.update({
            "LaunchTemplate":{
                "LaunchTemplateName":args.launch_template_name
                }
            })
    try:
        logging.info("--------------------------------------------")
        logging.info("Initiate EC2 instance creation from Template")
        logging.info("--------------------------------------------")
        print ("Create_instance_req: ",ec2_input_parm)
        #print ("Create_launch_template: ",boto_launch_template_data)
        ec2_launch_template=ec2connect.create_instances(**ec2_input_parm)
        print(ec2_launch_template)
        logging.info("Instance Created : "+str(ec2_launch_template))
        #print(ec2_instance_create_response[0].id)
        instance_count=1
        for ec2instance in ec2_launch_template:
            ec2instance.wait_until_running()
            ec2instance.reload()
            logging.info("EC2 Instance ID : "+ec2instance.id+" Instance Type:"+ec2instance.instance_type+" Public IP:"+ec2instance.public_ip_address)
            #print (ec2instance.id,ec2instance.instance_type,ec2instance.public_ip_address)
            if instance_count == 1:
                instance_ids=ec2instance.id
                instance_count=instance_count+1
            else:
                instance_ids+=","+ec2instance.id
                instance_count=instance_count+1
        #### Get the Instance ID and give the Current status 
        ##################Get the Instance ID's and pass it to check status function#########
        check_instance_status(instance_ids)
        ######################################################################################
    except Exception as e:
        logging.error("Error in Creating EC2 Instance")
        logging.error(e)
        sys.exit(1)

# -- Execute
main()</script_unix><output_return_file/><run_as_sudo>false</run_as_sudo><broadcast_cluster_var/><environment/><elevate_user>false</elevate_user><exit_code_output/><exit_code_processing>1</exit_code_processing><create_console>false</create_console><related_items_node><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-30 13:22:57</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>1af5cfb21dd648e5abac83c07a89e8c1</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:37:27</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Max Count</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>11</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Max count of instance that needs to be created</hint><field_mapping>textField5</field_mapping><name>max_count</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 15:49:50</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>202e4bfbe37b40f7971a49c66dc92b5f</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 15:48:09</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Launch Instance Option</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>4</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>select the choice for instance creation</hint><field_mapping>choiceField4</field_mapping><name>launch_instance_option</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-05-17 10:44:41</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>2462c7f761b141bea66216c731de5531</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-05-17 10:40:39</sys_created_on><field_value>false</field_value><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>booleanField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Use Public IP for  SSH</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>28</sequence><show_if_field_value>true</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>booleanField5</field_mapping><name>connect_linux</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>29207787ac5a44e49790b1064ee67151</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:55:28</sys_created_on><field_value>false</field_value><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EC2 Monitoring</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>23</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Do you want to enable cloud watch monitoring ? select your choice</hint><field_mapping>booleanField2</field_mapping><name>monitoring_enabled</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>365a7dd1658b486fa5ea4d70f6b8d41b</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 08:59:26</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Device Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>19</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the device name e.g. /dev/sda1</hint><field_mapping>textField14</field_mapping><name>device_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>3d5f857a9f5c46c09cc43a5ec89906b3</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 21:29:12</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>SubnetId</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>13</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide subnetID</hint><field_mapping>textField16</field_mapping><name>subnet_id</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-29 15:12:50</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>458b5571d9cc4c7abba72055e1ace12f</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 08:33:52</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>booleanField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Universal Agent Install OS</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>26</sequence><show_if_field_value>true</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>select the OS where universal agent needs to be installed</hint><field_mapping>choiceField5</field_mapping><name>agent_install_os</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>4befc17ba3d64cb0aaa21b810d04dcad</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 08:34:58</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>booleanField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Agent OMS IP</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>27</sequence><show_if_field_value>true</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the OMS server IP for the universal agent to be connected after installation</hint><field_mapping>textField13</field_mapping><name>agent_oms_server</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>5d8e552f5d764c5fa31999067b311940</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 21:28:10</sys_created_on><field_value>false</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Associate Public IP</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>12</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide true or false</hint><field_mapping>booleanField4</field_mapping><name>associate_public_ip</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>5ec25386d87945ed8d6e8da8f1d68a16</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:51:38</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Instance Tag name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>17</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the instance tag name</hint><field_mapping>textField8</field_mapping><name>instance_tag</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-19 12:16:45</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>70362a9dd6574de4b3eefc72b9f0d468</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 12:16:45</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>AWS_DEFAULT_REGION</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>0</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>AWS_DEFAULT_REGION</hint><field_mapping>credentialField1</field_mapping><name>aws_default_region</name><field_regex/><field_type>5</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>767b7aea530e41cf9fa4be136cc2bfcc</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:52:37</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EBS Voume Size</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>20</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide EBS Volume size</hint><field_mapping>textField9</field_mapping><name>ebs_volume_size</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-19 12:25:37</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>78ce49ae6417499695e42b78903fc9ef</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 12:25:37</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>loglevel</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>3</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>loglevel</hint><field_mapping>choiceField1</field_mapping><name>loglevel</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 20:48:30</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>7afde437e4a8406c9c741f8f335aaf89</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 11:55:07</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Keypair option</label><int_field_max/><choice_allow_empty>true</choice_allow_empty><sequence>7</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Select the keypair choice you would need to go with</hint><field_mapping>choiceField3</field_mapping><name>key_pair_choice</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-05-14 19:19:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>815c2d6581974162b91731d60cad5f01</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 08:32:16</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>booleanField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Agent Download URL</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>25</sequence><show_if_field_value>true</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the path to download the agent URL</hint><field_mapping>textField10</field_mapping><name>url_univ_agent</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 20:48:30</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>881e03b2c02948f58c5dd03e4cbf8cdd</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:34:14</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EC2-KEYPAIR-Path &amp; Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>8</sequence><show_if_field_value>existing_keypair,new_keypair</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide Keypair file name and the path (Donot give the extension) for new and for existing keypair just the name</hint><field_mapping>textField2</field_mapping><name>ec2_key_pair_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>9280b1c0d80f4240ab9257ee23168ec2</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:54:34</sys_created_on><field_value>false</field_value><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EBS Vol. Encyption</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>22</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>select encyption if needed</hint><field_mapping>booleanField1</field_mapping><name>ebs_volume_encryption</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-30 13:22:50</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>a5824483b8c1413abd851fb33989c072</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:37:02</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Minimum Count</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>10</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Minimum Count of instance that need to be created</hint><field_mapping>textField4</field_mapping><name>min_count</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>a927e4821c484bb888b5654db8e59a91</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:53:04</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EBS Vol. Type</label><int_field_max/><choice_allow_empty>true</choice_allow_empty><sequence>21</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>choiceField2</field_mapping><name>ebs_volume_type</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:02:02</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field>choiceField4</require_if_field><sys_id>afb3dad3feac49f2883efd7d6b883159</sys_id><require_if_field_value>new_instance</require_if_field_value><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:30:43</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>AWS_IMAGE_ID</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>6</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>AWS_Machine_ID</hint><field_mapping>textField1</field_mapping><name>aws_image_id</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-19 13:56:45</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>b364bfe574694a29aa559e937bc402f9</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 12:24:35</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>AWS_SECRET_ACCESS_KEY</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>2</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>AWS_SECRET_ACCESS_KEY</hint><field_mapping>credentialField3</field_mapping><name>aws_secret_access_key</name><field_regex/><field_type>5</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>b387db222bca48c9bbe82634fe9d5865</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 14:06:20</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>IAM Profile Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>18</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>If applicable provide the IAM Instance Profile Name</hint><field_mapping>textField11</field_mapping><name>iam_instance_profile_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 20:49:39</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>ba0e9c5c0a484512be1e64c669636e3a</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 20:47:50</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>LaunchTemplateName</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>5</sequence><show_if_field_value>launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the Launch template name</hint><field_mapping>textField15</field_mapping><name>launch_template_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>c0d164a5eda044dca8dda3ff091207b5</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-22 08:29:43</sys_created_on><field_value>false</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Install Universal Agent</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>24</sequence><show_if_field_value>new_instance</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>booleanField3</field_mapping><name>install_univ_agent</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-05-17 11:34:00</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>d8f98899374b423c9c17365339f42775</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-29 15:19:41</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>true</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>booleanField3</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>SSH User ID</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>29</sequence><show_if_field_value>true</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>provide the OS user ID</hint><field_mapping>textField12</field_mapping><name>os_user_id</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:59:02</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>e04fe1bd3bf74b70a8197bdd902355c9</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:47:36</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Security Group ID</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>16</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>provide security group ids, if multiple ID's then separate by comma</hint><field_mapping>textField7</field_mapping><name>aws_security_group_id</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-19 12:22:48</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>e6a35aac907746e9854b7e00928b6f8d</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 12:22:48</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>AWS_ACCESS_KEY_ID</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>1</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>AWS_ACCESS_KEY_ID</hint><field_mapping>credentialField2</field_mapping><name>aws_access_key_id</name><field_regex/><field_type>5</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:03:37</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field>choiceField4</require_if_field><sys_id>eb600ae0b63b42d0bf839aedcf7f1bb4</sys_id><require_if_field_value>new_instance</require_if_field_value><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:35:41</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>EC2 Instance Type</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>9</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>provide ec2-instance type like t2.micro</hint><field_mapping>textField3</field_mapping><name>ec2_instance_type</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-04-22 21:32:06</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>fec494e147ad4b0ab69d0f22555da84d</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-04-19 13:43:21</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id><show_if_field>choiceField4</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Availability Zone</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>15</sequence><show_if_field_value>new_instance,launch_from_template</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField6</field_mapping><name>aws_availability_zone</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>7afde437e4a8406c9c741f8f335aaf89</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>0e82cfc24991456982fd583e2407b003</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 11:55:42</sys_created_on><field_value_label>Existing keypair</field_value_label><field_value>existing_keypair</field_value><sys_updated_on>2020-04-22 12:00:58</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>202e4bfbe37b40f7971a49c66dc92b5f</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>137fc053b54146bbbff0e81348f086ee</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 15:48:53</sys_created_on><field_value_label>Launch from template</field_value_label><field_value>launch_from_template</field_value><sys_updated_on>2020-04-22 15:51:30</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>78ce49ae6417499695e42b78903fc9ef</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>1ae47ef9154d459f96dbbc60944a2fbb</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 12:25:53</sys_created_on><field_value_label>info</field_value_label><field_value>info</field_value><sys_updated_on>2020-04-19 12:25:53</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a927e4821c484bb888b5654db8e59a91</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>1d9e42a2c4e74ee6a26cd30f05ee0f02</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 08:26:54</sys_created_on><field_value_label>io1</field_value_label><field_value>io1</field_value><sys_updated_on>2020-04-22 08:26:54</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>458b5571d9cc4c7abba72055e1ace12f</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>20f863c0b7c94de5b6785c32229c5db0</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-05-14 19:10:33</sys_created_on><field_value_label>Linux kernel 3 x64 (RPM) [6.8.0.0]</field_value_label><field_value>Linux-rpm</field_value><sys_updated_on>2020-05-14 19:10:33</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>78ce49ae6417499695e42b78903fc9ef</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>23d4d56ac651409b9ebd10c8de87596a</sys_id><sequence>3</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 12:26:34</sys_created_on><field_value_label>critical</field_value_label><field_value>critical</field_value><sys_updated_on>2020-04-19 12:26:34</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>78ce49ae6417499695e42b78903fc9ef</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>28a33e8bb1b746fb823920c1ab9108cd</sys_id><sequence>4</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 13:29:30</sys_created_on><field_value_label>error</field_value_label><field_value>error</field_value><sys_updated_on>2020-04-19 13:29:30</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>78ce49ae6417499695e42b78903fc9ef</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>302d79a28d914291b626ea17dc084fd3</sys_id><sequence>2</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 12:26:20</sys_created_on><field_value_label>warning</field_value_label><field_value>warning</field_value><sys_updated_on>2020-04-19 12:26:20</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>202e4bfbe37b40f7971a49c66dc92b5f</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>3fe36e510da94437a251170067f67c01</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 15:49:36</sys_created_on><field_value_label>Create New Instance</field_value_label><field_value>new_instance</field_value><sys_updated_on>2020-04-22 15:51:14</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>78ce49ae6417499695e42b78903fc9ef</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>48e729eb7e314b6799b75522e54a3c8f</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-19 12:26:06</sys_created_on><field_value_label>debug</field_value_label><field_value>debug</field_value><sys_updated_on>2020-04-19 12:26:06</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a927e4821c484bb888b5654db8e59a91</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>78227d2356674e61b8d8d8e65885b86d</sys_id><sequence>4</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 08:28:33</sys_created_on><field_value_label>st1</field_value_label><field_value>st1</field_value><sys_updated_on>2020-04-22 08:28:33</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>7afde437e4a8406c9c741f8f335aaf89</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>940309ea0bb848c4bac4b3115b7925e3</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 11:55:56</sys_created_on><field_value_label>New keypair</field_value_label><field_value>new_keypair</field_value><sys_updated_on>2020-04-22 12:00:37</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a927e4821c484bb888b5654db8e59a91</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>b7486b656a3f4569b57d0072bfa687e7</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 08:26:41</sys_created_on><field_value_label>standard</field_value_label><field_value>standard</field_value><sys_updated_on>2020-04-22 08:26:41</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a927e4821c484bb888b5654db8e59a91</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>d63113b707b549adb5d3449057878a80</sys_id><sequence>2</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 08:27:22</sys_created_on><field_value_label>gp2</field_value_label><field_value>gp2</field_value><sys_updated_on>2020-04-22 08:27:22</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>458b5571d9cc4c7abba72055e1ace12f</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>d64f03ae412348c1a7b2983c346dbe28</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-29 15:17:43</sys_created_on><field_value_label>Linux kernel 3 x64 (Debian) [6.8.0.0]</field_value_label><field_value>Linux-debian</field_value><sys_updated_on>2020-04-29 15:17:43</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a927e4821c484bb888b5654db8e59a91</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>e295a2d6ac33454f99e2fe59528f2d05</sys_id><sequence>3</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-04-22 08:28:12</sys_created_on><field_value_label>sc1</field_value_label><field_value>sc1</field_value><sys_updated_on>2020-04-22 08:28:12</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>9126542c5bad4792b0346fb8b181bb02</universal_template_id></ops_unv_tmplt_field_choice></related_items_node></ops_unv_tmplt></unload>